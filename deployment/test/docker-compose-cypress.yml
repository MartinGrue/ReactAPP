version: "3.2"

networks:
  frontend:

services:
  # cypress:
  #   container_name: cypress
  #   build:
  #     context: ./../..
  #     dockerfile: ./deployment/test/Dockerfile.cypress
  #   # volumes:
  #   #   - ./../../client-app:/e2e/client-app
  #   #   - /dev/null:/e2e/client-app/build
  #   #   - ./../../data:/e2e/data
  #   working_dir: /e2e/client-app
  #   stdin_open: true
  #   tty: true
  #   network_mode: "service:backendapp"
  #   entrypoint: "bash /startup.sh"
  #   environment:
  #     - TEST=${TEST}
  #     - API_HOST=backend

  backendapp:
    environment:
      - ASPNETCORE_ENVIRONMENT=development
      - DOTNET_ENVIRONMENT=development
    container_name: backend
    build:
      context: ./../..
      dockerfile: ./deployment/dev/Dockerfile.dev.backend
    volumes:
      - ./../..:/app
      - /app/API/bin/
      - /app/API/obj/
      - /app/Application/bin/
      - /app/Application/obj/
      - /app/Domain/bin/
      - /app/Domain/obj/
      - /Infrastructure/bin/
      - /Infrastructure/obj/
      - /Persistence/bin/
      - /Persistence/obj/
    networks:
      - frontend
    ports:
      - "5000:5000"
      - "3000:3000"

  # activitydb:
  #   image: mysql
  #   container_name: activitydb
  #   networks:
  #     - frontend
  #   ports:
  #     - "3306:3306"
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   volumes:
  #     - ./../database_setup.sql:/docker-entrypoint-initdb.d/database_setup.sql
  #     # - ./../databaseBackUps/backup.sql:/docker-entrypoint-initdb.d/backup.sql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: example
  #   logging:
  #     driver: "none"
