version: "3.2"
networks:
  frontend:
services:
  frontendapp:
    build:
      context: ./../../client-app
      dockerfile: ./../deployment/dev/Dockerfile.dev.client
    volumes:
      - type: bind
        source: ./../../client-app
        target: /app/
    networks:
      - frontend
    ports:
      - "3000:3000"
    environment:
      - API_HOST=backend
    stdin_open: true # docker run -i
    tty: true        # docker run -t
  backendapp:
    container_name: backend
    build:
      context: ./../..
      dockerfile: .//deployment/dev/Dockerfile.dev.backend
    volumes:
        - ./../..:/app
        - /app/API/bin/
        - /app/API/obj/
        - /app/Application/bin/
        - /app/Application/obj/
        - /app/Domain/bin/
        - /app/Domain/obj/
        - /Infrastructure/bin/
        - /Infrastructure/obj/
        - /Persistence/bin/
        - /Persistence/obj/
    networks:
      - frontend
    ports:
      - "5000:5000"
    stdin_open: true # docker run -i
    tty: true # docker run -t
  activitydb:
    image: mysql
    container_name: activitydb
    networks:
      - frontend
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - ./../database_setup.sql:/docker-entrypoint-initdb.d/database_setup.sql
      # - ./../databaseBackUps/backup.sql:/docker-entrypoint-initdb.d/backup.sql
    environment:
      MYSQL_ROOT_PASSWORD: example